name: ci

on: 
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - '*'
  workflow_dispatch: 

jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
    strategy:
      fail-fast: false
      matrix:
        include:
          - swift: "6"
            xcode: "26.0.1"
            runs-on: macos-15
          - swift: "5"
            xcode: "16.4"
            runs-on: macos-15
          - swift: "5.10"
            xcode: "15.4"
            runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Building in Swift ${{ matrix.swift }}
        run: xcodebuild -scheme FloatingPanel SWIFT_VERSION=${{ matrix.swift }} clean build

  test:
    runs-on: ${{ matrix.runs-on }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "26.0"
            xcode: "26.0.1"
            sim: "iPhone 16 Pro"
            parallel: NO  # Stop random test job failures
            runs-on: macos-15
          - os: "18.5"
            xcode: "16.4"
            sim: "iPhone 16 Pro"
            parallel: NO  # Stop random test job failures
            runs-on: macos-15
          - os: "17.5"
            xcode: "15.4"
            sim: "iPhone 15 Pro"
            parallel: NO  # Stop random test job failures
            runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: Testing in iOS ${{ matrix.os }}
      run: |
        xcodebuild clean test \
          -workspace FloatingPanel.xcworkspace \
          -scheme FloatingPanel \
          -destination 'platform=iOS Simulator,OS=${{ matrix.os }},name=${{ matrix.sim }}' \
          -parallel-testing-enabled '${{ matrix.parallel }}'
    timeout-minutes: 20

  example:
    runs-on: macos-15
    env:
      DEVELOPER_DIR: /Applications/Xcode_16.4.app/Contents/Developer
    strategy:
      fail-fast: false
      matrix:
        include:
          - example: "Maps"
          - example: "Maps-SwiftUI"
          - example: "Stocks"
          - example: "Samples"
          - example: "SamplesObjC"
          - example: "SamplesSwiftUI"
    steps:
    - uses: actions/checkout@v4
    - name: Building ${{ matrix.example }}
      run: |
        xcodebuild clean build \
          -workspace FloatingPanel.xcworkspace \
          -scheme ${{ matrix.example }} \
          -sdk iphonesimulator

  swiftpm:
    runs-on: ${{ matrix.runs-on }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer
    strategy:
      fail-fast: false
      matrix:
        xcode: ["16.4", "15.4"]
        platform: [iphoneos, iphonesimulator]
        arch: [x86_64, arm64]
        exclude:
          - platform: iphoneos
            arch: x86_64
        include:
          # 18.5
          - platform: iphoneos
            xcode: "16.4"
            sys: "ios18.5"
            runs-on: macos-15
          - platform: iphonesimulator
            xcode: "16.4"
            sys: "ios18.5-simulator"
            runs-on: macos-15
          # 17.2
          - platform: iphoneos
            xcode: "15.4"
            sys: "ios17.2"
            runs-on: macos-14
          - platform: iphonesimulator
            xcode: "15.4"
            sys: "ios17.2-simulator"
            runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: "Swift Package Manager build"
      run: |
        xcrun swift build \
          --sdk "$(xcrun --sdk ${{ matrix.platform }} --show-sdk-path)" \
          -Xswiftc "-target" -Xswiftc "${{ matrix.arch }}-apple-${{ matrix.sys }}"

  cocoapods:
    runs-on: macos-15
    env:
      DEVELOPER_DIR: /Applications/Xcode_16.4.app/Contents/Developer
    steps:
    - uses: actions/checkout@v4
    - name: "CocoaPods: pod lib lint"
      run: pod lib lint --allow-warnings --verbose
    - name: "CocoaPods: pod spec lint"
      run: pod spec lint --allow-warnings --verbose
